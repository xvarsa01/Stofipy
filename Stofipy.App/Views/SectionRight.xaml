<?xml version="1.0" encoding="utf-8"?>

<views:ContentViewBase xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
        xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
        xmlns:views="clr-namespace:Stofipy.App.Views"
        xmlns:models="clr-namespace:Stofipy.BL.Models;assembly=Stofipy.BL"
        xmlns:viewModels="clr-namespace:Stofipy.App.ViewModels"
        xmlns:components="clr-namespace:Stofipy.App.Components"
        xmlns:buttons="clr-namespace:Stofipy.App.Components.Buttons"
        xmlns:converters="clr-namespace:Stofipy.App.Converters"
        x:Class="Stofipy.App.Views.SectionRight"
        x:Name="SectionRightViewRoot"
        x:DataType="viewModels:FilesInQueueVM"
>
    <ContentView.Resources>
        <converters:FileBackgroundColorConverter x:Key="FileBgColorConverter" />
    </ContentView.Resources>
    

    <Grid
        RowDefinitions="auto, *"
        Padding="10"
        RowSpacing="20"
        BackgroundColor="{StaticResource PagesBg}">

        <Grid Grid.Row="0"
            ColumnDefinitions="auto, auto,  *" Padding="-10, 0, 0, 0">
            <buttons:Queue_RecentlyPlayed
                Grid.Column="0"
                Text="Queue"
                TapCommand="{Binding ShowQueueCommand}"
                IsPressed="{Binding DisplayStandardQueue}"/>
            <buttons:Queue_RecentlyPlayed
                Grid.Column="1"
                Text="Recently played"
                TapCommand="{Binding ShowRecentlyPlayedCommand}"
                IsPressed="{Binding DisplayRecentlyPlayed}"/>
            <buttons:Queue_RecentlyPlayed
                Grid.Column="2"
                Text="X"
                TapCommand="{Binding CloseRightSectionCommand}"
                IsPressed="False"/>
        </Grid>
        
        
    <ScrollView Grid.Row="1" VerticalOptions="Fill">
    <VerticalStackLayout>
    
        <!-- Recently played -->
        <Grid 
            IsVisible="{Binding DisplayRecentlyPlayed}">

            <CollectionView ItemsSource="{Binding RecentlyPlayedQueue}">
                <CollectionView.ItemTemplate>
                    <DataTemplate x:DataType="models:FilesInQueueModel">
                        <components:FileWithPictureAnd2Texts 
                            Picture="{Binding Picture}" 
                            TopText="{Binding FileName}" 
                            BottomText="{Binding AuthorName}" />
                    </DataTemplate>
                </CollectionView.ItemTemplate>
            </CollectionView>        
        </Grid>
        
        <!-- Queue -->
        <VerticalStackLayout
            IsVisible="{Binding DisplayStandardQueue}"
            Spacing="20">
            
            <Label Text="Now playing" Style="{StaticResource TitleSmall}"/>
            <components:FileWithPictureAnd2Texts 
                Picture="{Binding NowPlaying.Picture}" 
                TopText="{Binding NowPlaying.FileName}" 
                BottomText="{Binding NowPlaying.AuthorName}" />

            <Label Text="Next in queue: " Style="{StaticResource TitleSmall}"/>
            <VerticalStackLayout Margin="0, -10, 0, 0"
                IsVisible="{Binding DisplayPriorityQueue}">
                <CollectionView ItemsSource="{Binding PriorityQueue}">
                    <CollectionView.ItemTemplate>
                        <DataTemplate x:DataType="models:FilesInQueueModel">
                            <Grid>
                                <!-- BACKGROUND: Green on drag -->
                                <components:QueueHighlightedDropArea 
                                    Highlighted="{Binding IsDraggedInto}"/>

                                <!-- MAIN CONTENT: Draggable -->
                                <Border Style="{StaticResource TransparentBorderThickness0}"
                                        Margin="0,5,0,0">
                                    <Border.GestureRecognizers>
                                        <DragGestureRecognizer
                                            DragStartingCommand="{Binding Source={x:Reference SectionRightViewRoot}, Path=BindingContext.DragStartedCommand}"
                                            DragStartingCommandParameter="{Binding .}"
                                            DropCompletedCommand="{Binding Source={x:Reference SectionRightViewRoot}, Path=BindingContext.DragReleasedCommand}" />
                                    </Border.GestureRecognizers>

                                    <components:FileWithPictureAnd2Texts 
                                        Picture="{Binding Picture}" 
                                        TopText="{Binding FileName}" 
                                        BottomText="{Binding AuthorName}" />
                                </Border>

                                <!-- DROP TARGET: Transparent hit area, allows drag-through -->
                                <Border Style="{StaticResource TransparentBorderThickness0}"
                                        Margin="0,-30,0,0"
                                        InputTransparent="{Binding Source={x:Reference SectionRightViewRoot}, Path=BindingContext.IsInputTransparent}"
                                        HeightRequest="72">
                                    <Border.GestureRecognizers>
                                        <DropGestureRecognizer
                                            DragOverCommand="{Binding Source={x:Reference SectionRightViewRoot}, Path=BindingContext.DragOverCommand}"
                                            DragOverCommandParameter="{Binding .}"
                                            DragLeaveCommand="{Binding Source={x:Reference SectionRightViewRoot}, Path=BindingContext.DragOverLeaveCommand}"
                                            DragLeaveCommandParameter="{Binding .}"
                                            DropCommand="{Binding Source={x:Reference SectionRightViewRoot}, Path=BindingContext.DragEndedCommand}"
                                            DropCommandParameter="{Binding .}" />
                                    </Border.GestureRecognizers>
                                </Border>
                            </Grid>
                        </DataTemplate>
                    </CollectionView.ItemTemplate>
                </CollectionView>
                
                <!-- last box if item needs to be placed at the last place in queue -->
                <Grid HeightRequest="10" ZIndex="1">
                    <Border BackgroundColor="Transparent" StrokeThickness="0"
                            Margin="0,-30,0,0">
                        <Border.GestureRecognizers>
                            <DropGestureRecognizer
                                DragOverCommand="{Binding Source={x:Reference SectionRightViewRoot}, Path=BindingContext.DragOverAtTheEndPriorityCommand}"
                                DragLeaveCommand="{Binding Source={x:Reference SectionRightViewRoot}, Path=BindingContext.DragOverAtTheEndPriorityLeaveCommand}"
                                DropCommand="{Binding Source={x:Reference SectionRightViewRoot}, Path=BindingContext.DragEndedAtTheEndPriorityCommand}"
                            />
                        </Border.GestureRecognizers>
                    </Border>
                </Grid>
                <components:QueueHighlightedDropArea 
                    Highlighted="{Binding DraggedIntoLastPriority}" ZIndex="-1" Margin="0,-10,0,0"/>
                
            </VerticalStackLayout>
            
            <Label Text="Next from playlist: " Style="{StaticResource TitleSmall}"/>
            <VerticalStackLayout Margin="0, -10, 0, 0">
                <CollectionView ItemsSource="{Binding BasicQueue}">
                    <CollectionView.ItemTemplate>
                        <DataTemplate x:DataType="models:FilesInQueueModel">
                            <Grid>
                                <!-- BACKGROUND: Green on drag -->
                                <components:QueueHighlightedDropArea 
                                    Highlighted="{Binding IsDraggedInto}"/>

                                <!-- MAIN CONTENT: Draggable -->
                                <Border Style="{StaticResource TransparentBorderThickness0}"
                                        Margin="0,5,0,0">
                                    <Border.GestureRecognizers>
                                        <DragGestureRecognizer
                                            DragStartingCommand="{Binding Source={x:Reference SectionRightViewRoot}, Path=BindingContext.DragStartedCommand}"
                                            DragStartingCommandParameter="{Binding .}"
                                            DropCompletedCommand="{Binding Source={x:Reference SectionRightViewRoot}, Path=BindingContext.DragReleasedCommand}" />
                                    </Border.GestureRecognizers>

                                    <components:FileWithPictureAnd2Texts 
                                        Picture="{Binding Picture}" 
                                        TopText="{Binding FileName}" 
                                        BottomText="{Binding AuthorName}" />
                                </Border>

                                <!-- DROP TARGET: Transparent hit area, allows drag-through -->
                                <Border Style="{StaticResource TransparentBorderThickness0}"
                                        Margin="0,-30,0,0"
                                        InputTransparent="{Binding Source={x:Reference SectionRightViewRoot}, Path=BindingContext.IsInputTransparent}"
                                        HeightRequest="72">
                                    <Border.GestureRecognizers>
                                        <DropGestureRecognizer
                                            DragOverCommand="{Binding Source={x:Reference SectionRightViewRoot}, Path=BindingContext.DragOverCommand}"
                                            DragOverCommandParameter="{Binding .}"
                                            DragLeaveCommand="{Binding Source={x:Reference SectionRightViewRoot}, Path=BindingContext.DragOverLeaveCommand}"
                                            DragLeaveCommandParameter="{Binding .}"
                                            DropCommand="{Binding Source={x:Reference SectionRightViewRoot}, Path=BindingContext.DragEndedCommand}"
                                            DropCommandParameter="{Binding .}" />
                                    </Border.GestureRecognizers>
                                </Border>
                            </Grid>
                        </DataTemplate>
                    </CollectionView.ItemTemplate>
                </CollectionView>
                
                <!-- last box if item needs to be placed at the last place in queue -->
                <Grid HeightRequest="10" ZIndex="1">
                    <Border BackgroundColor="Transparent" StrokeThickness="0"
                                Margin="0,-30,0,0">
                        <Border.GestureRecognizers>
                            <DropGestureRecognizer
                                DragOverCommand="{Binding Source={x:Reference SectionRightViewRoot}, Path=BindingContext.DragOverAtTheEndNonPriorityCommand}"
                                DragLeaveCommand="{Binding Source={x:Reference SectionRightViewRoot}, Path=BindingContext.DragOverAtTheEndNonPriorityLeaveCommand}"
                                DropCommand="{Binding Source={x:Reference SectionRightViewRoot}, Path=BindingContext.DragEndedAtTheEndNonPriorityCommand}"
                            />
                        </Border.GestureRecognizers>
                    </Border>
                </Grid>
                <components:QueueHighlightedDropArea 
                    Highlighted="{Binding DraggedIntoLastNonPriority}" ZIndex="-1" Margin="0,-10,0,0"/>
                
            </VerticalStackLayout>
            
        </VerticalStackLayout>
            
    </VerticalStackLayout>
    </ScrollView>
        
    </Grid>
</views:ContentViewBase>